[{"C:\\Users\\jovan\\dev\\uploader\\src\\index.tsx":"1","C:\\Users\\jovan\\dev\\uploader\\src\\reportWebVitals.ts":"2","C:\\Users\\jovan\\dev\\uploader\\src\\App.tsx":"3"},{"size":517,"mtime":1608244297577,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":5478,"mtime":1608411060899,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1aqmy7l",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\jovan\\dev\\uploader\\src\\index.tsx",[],["16","17"],"C:\\Users\\jovan\\dev\\uploader\\src\\reportWebVitals.ts",[],"C:\\Users\\jovan\\dev\\uploader\\src\\App.tsx",["18","19","20","21"],"import React, { useEffect, useRef, useState, useReducer } from \"react\";\nimport \"./App.scss\";\nimport { createMachine, assign } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\n\n// interface FileDropContext {\n//   count: number;\n// }\n\n// const FileDropMachine = createMachine<FileDropContext>({\n// });\n\nconst states = {\n  IDLE: \"IDLE\",\n  HOVERING: \"HOVERING\",\n  DRAGGING: \"DRAGGING\",\n  UPLOADING: \"UPLOADING\",\n  ERROR: \"ERROR\",\n  SUCCESS: \"SUCCESS\",\n};\n\nconst events = {\n  MOUSEENTER: \"MOUSEENTER\",\n  MOUSELEAVE: \"MOUSELEAVE\",\n  CLICK: \"CLICK\",\n  DRAGENTER: \"DRAGENTER\",\n  DRAGLEAVE: \"\",\n  DROP: \"DROP\",\n  PROCESSING: \"PROCESSING\",\n  ERROR: \"ERROR\",\n  SUCCESS: \"SUCCESS\",\n  RESET: \"RESET\",\n};\n\n// This sucks and I need to fix to XState!!!!\n\nconst fileDropMachine = {\n  id: \"filedrop\",\n  initial: states.IDLE,\n  context: {\n    progress: 0,\n  },\n  states: {\n    [states.IDLE]: {\n      on: {\n        [events.CLICK]: states.UPLOADING,\n        [events.MOUSEENTER]: states.HOVERING,\n      },\n    },\n    [states.HOVERING]: {\n      on: {\n        [events.CLICK]: states.UPLOADING,\n        [events.MOUSELEAVE]: states.IDLE,\n      },\n    },\n    [states.DRAGGING]: {\n      on: {\n        [events.DRAGLEAVE]: [{ target: states.ERROR, cond: \"hasError\" }],\n      },\n    },\n    [states.UPLOADING]: {\n      on: { [events.SUCCESS]: states.SUCCESS },\n    },\n    [states.ERROR]: {\n      entry: \"showError\",\n      on: { [events.DRAGLEAVE]: states.DRAGGING },\n    },\n    [states.SUCCESS]: {\n      on: {\n        [events.CLICK]: states.IDLE,\n        [events.RESET]: states.IDLE,\n      },\n    },\n  },\n};\n\nfunction fileDropReducer(state, event) {\n  return (\n    (fileDropMachine.states[state] &&\n      fileDropMachine.states[state].on[event]) ||\n    state\n  );\n}\n\n/* ---------------------------------- */\n\nfunction CloudIcon({ state }) {\n  const svgDisplayProps = {\n    viewBox: \"0 0 32 32\",\n    width: \"100\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: \"2\",\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: \"2\",\n  };\n\n  return (\n    <div className=\"cloud-icon\">\n      <svg className=\"cloud\" data-hidden=\"false\" {...svgDisplayProps}>\n        <path d=\"M18 22h6.001A5.003 5.003 0 0029 17a4.997 4.997 0 00-3.117-4.634 5.503 5.503 0 00-7.789-3.813 7 7 0 00-13.082 3.859A5.007 5.007 0 002 17c0 2.761 2.232 5 4.999 5H13\" />\n      </svg>\n      <svg\n        className=\"line\"\n        data-hidden={[states.UPLOADING, states.HOVERING].includes(state)}\n        {...svgDisplayProps}\n      >\n        <path d=\"M18 22h-5\" />\n      </svg>\n      <svg\n        className=\"arrow\"\n        data-hidden={![states.UPLOADING, states.HOVERING].includes(state)}\n        {...svgDisplayProps}\n      >\n        <path d=\"M15.5 15.151v11.824-11.824z\" />\n        <path d=\"M12.075 18.34l3.425-3.528 3.425 3.528\" />\n      </svg>\n      <svg\n        className=\"check\"\n        data-hidden={![states.SUCCESS].includes(state)}\n        {...svgDisplayProps}\n      >\n        <path d=\"M11.4 15.787l3.426 2.553 5.774-5.556\" />\n      </svg>\n    </div>\n  );\n}\n\n/* ---------------------------------- */\n\nfunction Progress(props) {\n  const { duration } = props;\n  const valueRef = useRef(0);\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      valueRef.current = valueRef.current + 1;\n      setValue(valueRef.current);\n    }, duration / 100);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <>\n      <p className=\"progress-label\">Image.png</p>\n      <progress min={0} max={100} value={value} />\n    </>\n  );\n}\n\n/* ---------------------------------- */\n\nconst TIMEOUT = 1000;\n\nfunction FileUploader() {\n  const [state, dispatch] = useReducer(\n    fileDropReducer,\n    fileDropMachine.initial\n  );\n\n  useEffect(() => {\n    switch (state) {\n      case states.UPLOADING:\n        setTimeout(() => dispatch(events.SUCCESS), TIMEOUT);\n        break;\n      case states.SUCCESS:\n        setTimeout(() => dispatch(events.RESET), TIMEOUT);\n        break;\n    }\n  }, [state]);\n\n  const showProgress = [states.UPLOADING].includes(state);\n\n  return (\n    <div\n      className=\"file-uploader\"\n      data-state={state}\n      onDragEnter={() => dispatch(\"MOUSEENTER\")}\n      onDragLeave={() => dispatch(\"MOUSELEAVE\")}\n      onDrop={() => dispatch(\"CLICK\")}\n      onMouseEnter={() => dispatch(\"MOUSEENTER\")}\n      onMouseLeave={() => dispatch(\"MOUSELEAVE\")}\n      onClick={() => dispatch(\"CLICK\")}\n    >\n      <CloudIcon state={state} />\n\n      {/* <input\n        ref={fileInputRef}\n        className=\"file-input\"\n        type=\"file\"\n        onChange={filesSelected}\n        {/*onInput={fileSize(this)}*/}\n\n      <div className=\"message\">\n        <strong data-hidden={![states.IDLE, states.HOVERING].includes(state)}>\n          Upload\n          {/* Drag & Drop image file here or click to select an image. */}\n        </strong>\n\n        <strong\n          className=\"message-uploading\"\n          data-hidden={![states.UPLOADING].includes(state)}\n        >\n          Uploading\n        </strong>\n\n        <strong\n          className=\"message-done\"\n          data-hidden={![states.SUCCESS].includes(state)}\n        >\n          Done!\n        </strong>\n      </div>\n\n      <div className=\"progress\" data-hidden={!showProgress}>\n        {showProgress && <Progress duration={TIMEOUT} />}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <FileUploader />\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":3,"column":10,"nodeType":"28","messageId":"29","endLine":3,"endColumn":23},{"ruleId":"26","severity":1,"message":"30","line":3,"column":25,"nodeType":"28","messageId":"29","endLine":3,"endColumn":31},{"ruleId":"26","severity":1,"message":"31","line":4,"column":10,"nodeType":"28","messageId":"29","endLine":4,"endColumn":20},{"ruleId":"32","severity":1,"message":"33","line":146,"column":6,"nodeType":"34","endLine":146,"endColumn":8,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"@typescript-eslint/no-unused-vars","'createMachine' is defined but never used.","Identifier","unusedVar","'assign' is defined but never used.","'useMachine' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'duration'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [duration]",{"range":"41","text":"42"},[3438,3440],"[duration]"]